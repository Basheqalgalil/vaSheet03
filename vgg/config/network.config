[neural-network]
connections = conv1_1, conv1_2, pool1, conv2_1, conv2_2, pool2, conv3_1, conv3_2, conv3_3, pool3, conv4_1, conv4_2, conv4_3, pool4, conv5_1, conv5_2, conv5_3, pool5, fc6, fc7, fc8

input-dimension = 150528
source-width = 224
source-height = 224
source-channels = 3

### connections ###

# block 1
[neural-network.conv1_1]
from = network-input
to = relu1_1
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 64

[neural-network.conv1_2]
from = relu1_1
to = relu1_2
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 64

[neural-network.pool1]
from = relu1_2
to = maxpool1
type = plain-connection

# block 2
[neural-network.conv2_1]
from = maxpool1
to = relu2_1
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 128

[neural-network.conv2_2]
from = relu2_1
to = relu2_2
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 128

[neural-network.pool2]
from = relu2_2
to = maxpool2
type = plain-connection

# block 3
[neural-network.conv3_1]
from = maxpool2
to = relu3_1
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 256

[neural-network.conv3_2]
from = relu3_1
to = relu3_2
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 256

[neural-network.conv3_3]
from = relu3_2
to = relu3_3
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 256

[neural-network.pool3]
from = relu3_3
to = maxpool3
type = plain-connection

# block 4
[neural-network.conv4_1]
from = maxpool3
to = relu4_1
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 512

[neural-network.conv4_2]
from = relu4_1
to = relu4_2
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 512

[neural-network.conv4_3]
from = relu4_2
to = relu4_3
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 512

[neural-network.pool4]
from = relu4_3
to = maxpool4
type = plain-connection

# block 5
[neural-network.conv5_1]
from = maxpool4
to = relu5_1
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 512

[neural-network.conv5_2]
from = relu5_1
to = relu5_2
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 512

[neural-network.conv5_3]
from = relu5_2
to = relu5_3
type = convolutional-connection
kernel-width = 3
kernel-height = 3
dest-channels = 512

[neural-network.pool5]
from = relu5_3
to = maxpool5
type = plain-connection

# fully connected
[neural-network.fc6]
from = maxpool5
to = layer-6
type = weight-connection

[neural-network.fc7]
from = layer-6
to = layer-7
type = weight-connection

[neural-network.fc8]
from = layer-7
to = layer-8
type = weight-connection

### layers ###

# block 1
[neural-network.relu1_1]
type = rectified

[neural-network.relu1_2]
type = rectified

[neural-network.maxpool1]
type = max-pooling
grid-size = 2
stride = 2
use-bias = false
use-cudnn = false

# block 2
[neural-network.relu2_1]
type = rectified

[neural-network.relu2_2]
type = rectified

[neural-network.maxpool2]
type = max-pooling
grid-size = 2
stride = 2
use-bias = false
use-cudnn = false

# block 3
[neural-network.relu3_1]
type = rectified

[neural-network.relu3_2]
type = rectified

[neural-network.relu3_3]
type = rectified

[neural-network.maxpool3]
type = max-pooling
grid-size = 2
stride = 2
use-bias = false
use-cudnn = false

# block 4
[neural-network.relu4_1]
type = rectified

[neural-network.relu4_2]
type = rectified

[neural-network.relu4_3]
type = rectified

[neural-network.maxpool4]
type = max-pooling
grid-size = 2
stride = 2
use-bias = false
use-cudnn = false

# block 5
[neural-network.relu5_1]
type = rectified

[neural-network.relu5_2]
type = rectified

[neural-network.relu5_3]
type = rectified

[neural-network.maxpool5]
type = max-pooling
grid-size = 2
stride = 2
use-bias = false
use-cudnn = false

# fully connected
[neural-network.layer-6]
number-of-units = 4096
type = rectified
dropout-probability = 0.9

[neural-network.layer-7]
number-of-units = 4096
type = rectified
dropout-probability = 0.9

[neural-network.layer-8]
number-of-units = 12
type = softmax

